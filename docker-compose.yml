services:
  bot:
    # for local build
    # build:
    #   context: "./"

    image: ghcr.io/jgrtowy/tomochan:main

    environment:
      TZ: "Europe/Warsaw"
      HISTIGNORE: 'docker*'
    
    env_file:
    # standalone/desktop
      - .env
    # portainer
    #   - stack.env

    restart: unless-stopped
    # delete if db isn't in this file
    # depends_on:
    #     db:
    #         condition: service_healthy
    #         restart: true
    stop_signal: SIGINT

    labels:
      - com.centurylinklabs.watchtower.scope=tomochan

  # delete if you already have the db
  db:
    image: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5

  
  # database management system
  adminer:
    image: adminer
    restart: always
    ports:
      - 8081:8080

  # checks for image updates
  
  # watchtower:
  #   image: beatkind/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --debug --cleanup --scope tomochan --http-api-update --http-api-periodic-polls --include-restarting --include-stopped
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=false"
  #   ports:
  #     - 8080:8080
  #   environment:
  #     WATCHTOWER_HTTP_API_TOKEN: ${WATCHTOWER_HTTP_API_TOKEN}

volumes:
  pgdata:
  
networks:
  default:
    driver: bridge